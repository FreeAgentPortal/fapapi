import { Model } from 'mongoose';
import { ErrorUtil } from '../../../middleware/ErrorUtil';
import AdminModel from '../../profiles/admin/model/AdminModel';
import { AthleteModel } from '../../profiles/athlete/models/AthleteModel';
import { ClaimType } from '../../auth/model/ClaimSchema';
import User, { UserType } from '../../auth/model/User';
import TeamModel from '../../profiles/team/model/TeamModel';
import { EmailService } from '../email/EmailService';
import Notification from '../model/Notification';

export default class UserEvents {
  public onPasswordUpdated = async (event: { userId: string; newPassword: string; isAutoGenerated: boolean }) => {
    const { userId, newPassword } = event;
    console.log(`[Notification] Password updated for user ID: ${userId}`);
    // Find the user by ID
    const user = await User.findById(userId);
    if (!user) {
      throw new ErrorUtil('User not found', 404);
    }

    // Create a notification
    await Notification.insertNotification(
      user._id as any,
      null as any,
      'Password Updated',
      `Your password has been updated successfully.`,
      'user.passwordUpdated',
      user._id as any
    );

    if (event.isAutoGenerated) {
      await EmailService.sendEmail({
        to: user.email,
        subject: 'Your Password Has Been Updated',
        templateId: 'd-661458f3132544d3a0a192ff1455ae52',
        data: {
          currentYear: new Date().getFullYear(),
          subject: 'Your Password Has Been Updated',
          password: newPassword,
        },
      });
    }
  };
}
